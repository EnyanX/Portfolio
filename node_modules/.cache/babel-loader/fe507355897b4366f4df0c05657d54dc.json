{"ast":null,"code":"var _jsxFileName = \"/Users/enyanxia/portfolio/src/components/downloadButton/DownloadButton.jsx\";\nimport React, { useState } from 'react';\nconst DownloadButton = ({\n  filePath,\n  fileName\n}) => {\n  const [fileContent, setFileContent] = useState(null);\n  const handleDownload = async () => {\n    try {\n      const response = await fetch(filePath);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch file: ${response.statusText}`);\n      }\n      const content = await response.blob();\n      if (content.type === 'application/pdf') {\n        // Create a link element\n        const link = document.createElement('a');\n\n        // Set the href attribute to a Blob URL\n        link.href = window.URL.createObjectURL(content);\n\n        // Specify the filename for the download\n        link.download = fileName;\n\n        // Append the link to the document\n        document.body.appendChild(link);\n\n        // Trigger a click on the link to start the download\n        link.click();\n\n        // Remove the link from the document\n        document.body.removeChild(link);\n      } else {\n        throw new Error('Invalid file type. Expected application/pdf.');\n      }\n    } catch (error) {\n      console.error('Error handling download:', error.message);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Download PDF\"));\n};\nexport default DownloadButton;","map":{"version":3,"names":["React","useState","DownloadButton","filePath","fileName","fileContent","setFileContent","handleDownload","response","fetch","ok","Error","statusText","content","blob","type","link","document","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","removeChild","error","console","message","__self","__source","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/enyanxia/portfolio/src/components/downloadButton/DownloadButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst DownloadButton = ({ filePath, fileName }) => {\n  const [fileContent, setFileContent] = useState(null);\n\n  const handleDownload = async () => {\n    try {\n      const response = await fetch(filePath);\n  \n      if (!response.ok) {\n        throw new Error(`Failed to fetch file: ${response.statusText}`);\n      }\n  \n      const content = await response.blob();\n  \n      if (content.type === 'application/pdf') {\n        // Create a link element\n        const link = document.createElement('a');\n  \n        // Set the href attribute to a Blob URL\n        link.href = window.URL.createObjectURL(content);\n  \n        // Specify the filename for the download\n        link.download = fileName;\n  \n        // Append the link to the document\n        document.body.appendChild(link);\n  \n        // Trigger a click on the link to start the download\n        link.click();\n  \n        // Remove the link from the document\n        document.body.removeChild(link);\n      } else {\n        throw new Error('Invalid file type. Expected application/pdf.');\n      }\n    } catch (error) {\n      console.error('Error handling download:', error.message);\n    }\n  };\n  \n\n  return (\n    <div>\n      <button onClick={handleDownload}>Download PDF</button>\n    </div>\n  );\n};\n\nexport default DownloadButton;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACjD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMM,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,CAAC;MAEtC,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,yBAAwBH,QAAQ,CAACI,UAAW,EAAC,CAAC;MACjE;MAEA,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAErC,IAAID,OAAO,CAACE,IAAI,KAAK,iBAAiB,EAAE;QACtC;QACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;;QAExC;QACAF,IAAI,CAACG,IAAI,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACT,OAAO,CAAC;;QAE/C;QACAG,IAAI,CAACO,QAAQ,GAAGnB,QAAQ;;QAExB;QACAa,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC;;QAE/B;QACAA,IAAI,CAACU,KAAK,CAAC,CAAC;;QAEZ;QACAT,QAAQ,CAACO,IAAI,CAACG,WAAW,CAACX,IAAI,CAAC;MACjC,CAAC,MAAM;QACL,MAAM,IAAIL,KAAK,CAAC,8CAA8C,CAAC;MACjE;IACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC1D;EACF,CAAC;EAGD,oBACE9B,KAAA,CAAAkB,aAAA;IAAAa,MAAA;IAAAC,QAAA;MAAA5B,QAAA,EAAA6B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnC,KAAA,CAAAkB,aAAA;IAAQkB,OAAO,EAAE7B,cAAe;IAAAwB,MAAA;IAAAC,QAAA;MAAA5B,QAAA,EAAA6B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAoB,CAClD,CAAC;AAEV,CAAC;AAED,eAAejC,cAAc"},"metadata":{},"sourceType":"module"}