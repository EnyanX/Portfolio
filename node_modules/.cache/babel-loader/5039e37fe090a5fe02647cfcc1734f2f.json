{"ast":null,"code":"var _jsxFileName = \"/Users/enyanxia/portfolio/src/components/downloadButton/DownloadButton.jsx\";\nimport React from 'react';\nconst DownloadButton = ({\n  filePath,\n  fileName\n}) => {\n  const handleDownload = () => {\n    // Fetch the file content from the specified filePath (assuming it's available in your project)\n    // You can use FileReader or any other method to read the file content\n    // For simplicity, let's assume the content is hardcoded here\n    const fileContent = 'This is the content of the file.';\n\n    // Create a Blob with the file content\n    const blob = new Blob([fileContent], {\n      type: 'text/plain'\n    });\n\n    // Create a link element\n    const link = document.createElement('a');\n\n    // Set the href attribute to a Blob URL\n    link.href = window.URL.createObjectURL(blob);\n\n    // Specify the filename for the download\n    link.download = fileName;\n\n    // Append the link to the document\n    document.body.appendChild(link);\n\n    // Trigger a click on the link to start the download\n    link.click();\n\n    // Remove the link from the document\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Download File\"));\n};\nexport default DownloadButton;","map":{"version":3,"names":["React","DownloadButton","filePath","fileName","handleDownload","fileContent","blob","Blob","type","link","document","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","removeChild","__self","__source","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/enyanxia/portfolio/src/components/downloadButton/DownloadButton.jsx"],"sourcesContent":["import React from 'react';\n\nconst DownloadButton = ({ filePath, fileName }) => {\n  const handleDownload = () => {\n    // Fetch the file content from the specified filePath (assuming it's available in your project)\n    // You can use FileReader or any other method to read the file content\n    // For simplicity, let's assume the content is hardcoded here\n    const fileContent = 'This is the content of the file.';\n\n    // Create a Blob with the file content\n    const blob = new Blob([fileContent], { type: 'text/plain' });\n\n    // Create a link element\n    const link = document.createElement('a');\n\n    // Set the href attribute to a Blob URL\n    link.href = window.URL.createObjectURL(blob);\n\n    // Specify the filename for the download\n    link.download = fileName;\n\n    // Append the link to the document\n    document.body.appendChild(link);\n\n    // Trigger a click on the link to start the download\n    link.click();\n\n    // Remove the link from the document\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div>\n      <button onClick={handleDownload}>Download File</button>\n    </div>\n  );\n};\n\nexport default DownloadButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA;IACA;IACA,MAAMC,WAAW,GAAG,kCAAkC;;IAEtD;IACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,WAAW,CAAC,EAAE;MAAEG,IAAI,EAAE;IAAa,CAAC,CAAC;;IAE5D;IACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;;IAExC;IACAF,IAAI,CAACG,IAAI,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACT,IAAI,CAAC;;IAE5C;IACAG,IAAI,CAACO,QAAQ,GAAGb,QAAQ;;IAExB;IACAO,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC;;IAE/B;IACAA,IAAI,CAACU,KAAK,CAAC,CAAC;;IAEZ;IACAT,QAAQ,CAACO,IAAI,CAACG,WAAW,CAACX,IAAI,CAAC;EACjC,CAAC;EAED,oBACET,KAAA,CAAAW,aAAA;IAAAU,MAAA;IAAAC,QAAA;MAAAnB,QAAA,EAAAoB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzB,KAAA,CAAAW,aAAA;IAAQe,OAAO,EAAEtB,cAAe;IAAAiB,MAAA;IAAAC,QAAA;MAAAnB,QAAA,EAAAoB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,eAAqB,CACnD,CAAC;AAEV,CAAC;AAED,eAAexB,cAAc"},"metadata":{},"sourceType":"module"}